xxx 21/01/2025 xxx
- Lauched project workstation 
- Server PW: vmtech
- Cloned remote repo to local repo, only
- Installed Java 17 and created environment variable
- Installed Maven and created environment variable
- Ran local build; $ mvn package; successful

xxx 31/01/2025 xxx
- Installed jenkins using bash script
- Installed necessary plugins
- Created environment variable for JDK, GIT, MAVEN, etc
- Set-up project a free-style project
- Checked; this path for the artifacts
jenkins@ip-10-0-1-56:~/workspace/vmtech-greeting-app/webapp/target$
- Next is to set QA/Stagging Server
pw: jenkins, & vmtech

xxx 01/02/2025 xxx
- lunched QA/Staging server
- Installed java & created environment variable
- Installed apache-tomcat & created environment variable
- Changed root ownership to ubuntu user and group
- Created ssh connection from workstation sever to QA/Staging Server
- Secure copy the artifacts from workstation to QA/Staging Server
- Started apache-tomcat
- Browse <QA/Staging-publ-ip:8080>, successful

xxx 02/02/2025 xxx
- created ssh connection from jenkins user to QA/Staging Server
- created ssh-server in jenkins GUI (under SYSTEM)
- configure the project to user ssh-server to copy artifact from jenkins user home to QA/Staging server [under apache-tomcat webapps directory]
- started tomcat and check browser <QA/Staging-publ-ip:8080>; successful
- installed docker and added ubuntu to docker group,
- restarted the system; $ sudo init 6
- pulled tomcat, nginx and httpd images

xxx 04/02/2025 xxx
- Ran containers using tomcat latest image
- Checked if any service is using port 8080, $ sudo netstat -tnlp | grep :8080
- Installed net-tools $ sudo apt install net-tools -y
- Practised with docker commands; docker ps, docker ps -a, docker images, docker rmi <image-name>, docker stop <con-name>, docker rm <con-name>, docker run -d --name <your-con-name> -p <desired-port:tomcat-port> <image-name> etc
- Exec into a runing container $ docker exec -it <con-name> /bin/bash
- Copied webapps.list content ./* into webapps dir
- Ran a single command to pulled image and at the same time give a running container
$ docker run -d --name <con-name> -p <desired-port:tomcat-port> tomcat:latest
$ docker exec -it <con-name> /bin/bash
# docker cp -r /usr/local/tomcat/webapps.dist/* /usr/local/tomcat/webapps

xxx 06/02/2025 xxx
- Set up a dockerfile to copy content of webapps.dist to webapps
- Ran buid command on the docker file $ docker build -t <image-name> .  [the dot is the very essential] 
- Cheched for the image build by dockerfile $ docker images
- Ran the image into a container $ docker run -d --name <container-name> -p <desired-port:8080> <image-name>
- Checked the browser for the app using <pub-ip-addr>:<desired-port>  successful

xxx 09/02/2025 xxx
- Encountered unstable build with Jenkins
- Changed the IP-Addr of Staging/QA Server in Manage Jenkins > System > ssh server
- Build still unsatble, deleted existing webapp.war, images, containers from Staging/QA server
- Build became stable, [## Jenkins is unable to build over name space]
- Installed Ansible, python3 and docker
- Created ansible playbook to deploy dockerfile, webapp.war etc

xxx 12/02/2025 xxx
- Launched two production servers (Debian and Amazon Linux)
- Installed java-17 and docker on the production servers
- Created environment variable for java in each server
- Added username of each server to docker group [## you must reload the server]
- Established ssh connection from Staging/QA server to production servers

xxx 13/02/2025 xxx
- Created ansible host file for the two production servers, ansible-host
  $ vi ansible-host
	[production_servers]
	production-server1_pub-ip-address anisble_host=${USER} path-to-ansible_python_interpreter 
	production-server2_pub-ip-address anisble_host=${USER} path-to-ansible_python_interpreter
   :wq!
- Ran a ping commmand; $ ansible all -m ping -i ansible-host  
- Tested connection with the; $ ansible-playbook -i <hosts-file> <name-of-yaml-file>
[Ensure the webapp.war, dockerfile, hostfile and playbook are in the home directory of staging/qa server]

xxx 15/02/2025 xxx
- Updated the ip-addr of the staging/qa server and jenkins
- Deleted the exec commands in project-configure section Dashboard > project > configure >
- Replaced deleted command with; ansible-playbook -i <hosts-file> <name-of-ansible-playbook> 
- Apply & Save
- Ran build in jenkins project GUI
